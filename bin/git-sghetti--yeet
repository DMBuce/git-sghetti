#!/bin/bash

# define some vars
prog="${0##*/}"
action="${prog#git-sghetti--}"
oldprog="$prog"
prog="${prog/-sghetti--/ sghetti }"
SUBDIRECTORY_OK=Yes
NONGIT_OK=
OPTIONS_KEEPDASHDASH=
OPTIONS_STUCKLONG=
OPTIONS_SPEC="\
$prog

\`git sghetti shove\` really hard.
--
"

# normalize options, set up shell functions, define $GIT_DIR, $GIT_OBJECT_DIRECTORY
. "$(git --exec-path)/git-sh-setup"

# parse options
while (( $# )); do
	case "$1" in
		--)
			shift
			break
		;;
		-*)
			die "Unimplemented option (this is a bug): $1"
		;;
		*)
			break
		;;
	esac
	shift
done

# parse remote url
. git-sghetti

# harcoded behavior
case "$flavor" in
	ssh|hub)
		# find aur dir
		aurdir="$(git config aur.dir)"
		if [[ -z "$aurdir" ]]; then
			echo "Configure an AUR dir:" >&2
			echo >&2
			echo "    git config --global aur.dir /path/to/aur/dir" >&2
			echo >&2
			echo "Each subdirectory of the AUR dir should be a git clone of the AUR package" >&2
			echo "you plan to yeet." >&2
			exit 1
		fi

		# make sure aur dir exists
		pkg="${dir%.git}"
		pkg="${pkg#/}"
		if [[ -d "$aurdir/$pkg-git" ]]; then
			makepkgdir="$aurdir/$pkg-git"
		elif [[ -d "$aurdir/$pkg" ]]; then
			makepkgdir="$aurdir/$pkg"
		else
			die "Can't find makepkg folder for package: $pkg"
		fi

		# yeet
		git sghetti shove && cd "$makepkgdir" && makepkg -f --clean && addpkg
	;;
	aur)
		git sghetti shove
	;;
	*)
		die "Flavor not implemented for '$action': $flavor"
	;;
esac

