#!/bin/bash

# setup
USAGE='[-m|--mkdirs] <command>'
LONG_USAGE="ssh into the remote repository of the current branch and run \`<command>\`."
SUBDIRECTORY_OK=Yes
. "$(git --exec-path)/git-sh-setup"

# parse args
mkdirs=0
if [[ "$1" =~ ^(-m|--mkdirs?)$ ]]; then
	mkdirs=1
	shift
fi
cmd="$*"

# figure out remote url for current branch
branch="$(git rev-parse --abbrev-ref HEAD)"
remote="$(git config --default origin "branch.$branch.remote")"
url="$(git config "remote.$remote.url")"

# check if remote has a url
if [[ -z "$remote" ]]; then
	die "No remote configured for branch: $branch"
elif [[ -z "$url" ]]; then
	die "No url configured for remote: $remote"
fi

# figure out ssh target and directory from url
if [[ $url == ssh:// ]]; then
	# ssh://[user@]host.xz[:port]/path/to/repo.git/
	# ssh://[user@]host.xz[:port]/~[user]/path/to/repo.git/
	url="${url#ssh://}"
	IFS=/ read target dir <<< "$url"
	[[ $dir != ~* ]] && dir="/$dir"
	target="ssh://$target"
elif [[ $url != *://* && $url != /* ]]; then
	# [user@]host.xz:path/to/repo.git/
	# [user@]host.xz:/~[user]/path/to/repo.git/
	IFS=: read target dir <<< "$url"
	[[ $dir != /~* ]] && dir="${dir#/}"
else
	die "Remote '$remote' does not have an SSH URL: $url"
fi

# ssh into target [user@]host, switch to repo, and run command
setup="cd $dir || exit"
(( mkdirs )) && setup="mkdir -p $dir && $setup"
ssh "$target" "$setup; $cmd"

